// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// PipeSpec defines the desired state of Pipe.
//
// An object that represents a pipe. Amazon EventBridgePipes connect event sources
// to targets and reduces the need for specialized knowledge and integration
// code.
type PipeSpec struct {

	// A description of the pipe.
	Description *string `json:"description,omitempty"`
	// The state the pipe should be in.
	DesiredState *string `json:"desiredState,omitempty"`
	// The ARN of the enrichment resource.
	Enrichment *string `json:"enrichment,omitempty"`
	// The parameters required to set up enrichment on your pipe.
	EnrichmentParameters *PipeEnrichmentParameters `json:"enrichmentParameters,omitempty"`
	// The name of the pipe.
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// The ARN of the role that allows the pipe to send data to the target.
	// +kubebuilder:validation:Required
	RoleARN *string `json:"roleARN"`
	// The ARN of the source resource.
	// +kubebuilder:validation:Required
	Source *string `json:"source"`
	// The parameters required to set up a source for your pipe.
	SourceParameters *PipeSourceParameters `json:"sourceParameters,omitempty"`
	// The list of key-value pairs to associate with the pipe.
	Tags map[string]*string `json:"tags,omitempty"`
	// The ARN of the target resource.
	// +kubebuilder:validation:Required
	Target *string `json:"target"`
	// The parameters required to set up a target for your pipe.
	//
	// For more information about pipe target parameters, including how to use dynamic
	// path parameters, see Target parameters (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-target.html)
	// in the Amazon EventBridge User Guide.
	TargetParameters *PipeTargetParameters `json:"targetParameters,omitempty"`
}

// PipeStatus defines the observed state of Pipe
type PipeStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The time the pipe was created.
	// +kubebuilder:validation:Optional
	CreationTime *metav1.Time `json:"creationTime,omitempty"`
	// The state the pipe is in.
	// +kubebuilder:validation:Optional
	CurrentState *string `json:"currentState,omitempty"`
	// When the pipe was last updated, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime)
	// (YYYY-MM-DDThh:mm:ss.sTZD).
	// +kubebuilder:validation:Optional
	LastModifiedTime *metav1.Time `json:"lastModifiedTime,omitempty"`
	// The reason the pipe is in its current state.
	// +kubebuilder:validation:Optional
	StateReason *string `json:"stateReason,omitempty"`
}

// Pipe is the Schema for the Pipes API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="ARN",type=string,priority=1,JSONPath=`.status.ackResourceMetadata.arn`
// +kubebuilder:printcolumn:name="SOURCE",type=string,priority=1,JSONPath=`.spec.source`
// +kubebuilder:printcolumn:name="STATE",type=string,priority=0,JSONPath=`.status.currentState`
// +kubebuilder:printcolumn:name="TARGET",type=string,priority=1,JSONPath=`.spec.target`
// +kubebuilder:printcolumn:name="Synced",type="string",priority=0,JSONPath=".status.conditions[?(@.type==\"ACK.ResourceSynced\")].status"
// +kubebuilder:printcolumn:name="Age",type="date",priority=0,JSONPath=".metadata.creationTimestamp"
type Pipe struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PipeSpec   `json:"spec,omitempty"`
	Status            PipeStatus `json:"status,omitempty"`
}

// PipeList contains a list of Pipe
// +kubebuilder:object:root=true
type PipeList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Pipe `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Pipe{}, &PipeList{})
}
